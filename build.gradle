
println("******************")

// project的额外属性，这里用于定义profile属性，模拟maven的profile
ext {
    // profile 默认值 在 gradle.properties 中定义
    println "profile is : ${profile}"
}
buildscript {
    repositories {
        maven {
            credentials {
                username "guest"
                password "qwerzxcvasdf"
            }
            url "http://101.200.170.176:8081/nexus/content/groups/public/"
        }
//        mavenLocal()
//        if(profile.toUpperCase() == "DEV" ) {
//            maven { url "http://192.168.0.165:8081/nexus/content/groups/public/" }
//        } else if(profile.toUpperCase() == "USA" ) {
//            mavenCentral()
//        } else {
//        }
//        maven { url 'https://repo.spring.io/plugins-release' }
//        maven { url "http://maven.oschina.net/content/groups/public/"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'fileDownload'
    version = '0.1.0'
}

repositories {
    maven {
        credentials {
            username "guest"
            password "qwerzxcvasdf"
        }
        url "http://101.200.170.176:8081/nexus/content/groups/public/"
    }
//    mavenLocal()
//    if(profile.toUpperCase() == "DEV" ) {
//    } else if(profile.toUpperCase() == "USA" ) {
//        mavenCentral()
//    } else {
//    }
//    maven { url "http://106.120.106.228:18081/content/groups/public/" }
//    maven { url "http://maven.oschina.net/content/groups/public/"}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    // Spring Boot 对这些运维相关的功能进行了整合，形成了一个功能完备和可定制的功能集，称之为 Actuator。
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-freemarker:${springBootVersion}")
//    compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    compile('org.apache.commons:commons-pool2:2.4.2')


    println "${profile} compile actuator"
    if (profile != "stable") {
        compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
        println "compile devtool"
    } else {
        println "not compile actuator"
    }


    compile("org.codehaus.groovy:groovy-all:2.4.6")
    compile("org.springframework.boot:spring-boot-starter-remote-shell:${springBootVersion}")
    compile('com.google.guava:guava:18.0')
    compile('org.apache.thrift:libthrift:0.9.3')


    compile('com.seveniu:Commons:0.0.12')

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    //optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

sourceSets {
    main {
        resources {
            srcDir "conf"
            srcDir "conf-${profile}"
            srcDir 'cmd'
            srcDir 'script'
        }
    }
}
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task wrapper(type: Wrapper) {
    def version = '2.10'
    gradleVersion = version
    distributionUrl = "http://7xnyyx.com1.z0.glb.clouddn.com/gradle-${version}-all.zip"
}


mainClassName="com.seveniu.AppFileDownloader"
bootRun {
    // 从 system 参数 中读取
    String springProfile = System.getProperty("spring.profiles.active")
    println("system prop spring.profiles.active : ${profile}")
    //手动设置 jvm 属性
//    System.setProperty("spring.profiles.active", (String)springProfile)
    systemProperties.putAt("spring.profiles.active",profile)
    addResources = true
}


task curProfile << {
    println("hello ${profile}")
}

task helloworld << {
    println("hello world")
}

println("====================")
